{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.preprocessing import RobustScaler\n",
    "from sklearn.preprocessing import Normalizer\n",
    "from sklearn.preprocessing import scale\n",
    "from sklearn.preprocessing import minmax_scale"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Time</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>MACD (26,12)</th>\n",
       "      <th>TRIGGER (9)</th>\n",
       "      <th>BOL U (20,2)</th>\n",
       "      <th>BOL M (20,2)</th>\n",
       "      <th>BOL D (20,2)</th>\n",
       "      <th>RSI (14)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>03.11.2020</td>\n",
       "      <td>14:00</td>\n",
       "      <td>9.41</td>\n",
       "      <td>9.67</td>\n",
       "      <td>9.34</td>\n",
       "      <td>9.51</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>03.11.2020</td>\n",
       "      <td>18:00</td>\n",
       "      <td>9.52</td>\n",
       "      <td>9.52</td>\n",
       "      <td>9.52</td>\n",
       "      <td>9.52</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>04.11.2020</td>\n",
       "      <td>10:00</td>\n",
       "      <td>9.52</td>\n",
       "      <td>9.78</td>\n",
       "      <td>9.47</td>\n",
       "      <td>9.63</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>04.11.2020</td>\n",
       "      <td>14:00</td>\n",
       "      <td>9.63</td>\n",
       "      <td>9.92</td>\n",
       "      <td>9.62</td>\n",
       "      <td>9.79</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>04.11.2020</td>\n",
       "      <td>18:00</td>\n",
       "      <td>9.78</td>\n",
       "      <td>9.78</td>\n",
       "      <td>9.78</td>\n",
       "      <td>9.78</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2595</th>\n",
       "      <td>26.04.2024</td>\n",
       "      <td>14:00</td>\n",
       "      <td>317.00</td>\n",
       "      <td>319.00</td>\n",
       "      <td>315.25</td>\n",
       "      <td>316.50</td>\n",
       "      <td>4.358951</td>\n",
       "      <td>3.083766</td>\n",
       "      <td>318.773355</td>\n",
       "      <td>304.8625</td>\n",
       "      <td>290.951645</td>\n",
       "      <td>69.720226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2596</th>\n",
       "      <td>26.04.2024</td>\n",
       "      <td>18:00</td>\n",
       "      <td>316.50</td>\n",
       "      <td>317.00</td>\n",
       "      <td>316.50</td>\n",
       "      <td>317.00</td>\n",
       "      <td>4.578920</td>\n",
       "      <td>3.382797</td>\n",
       "      <td>320.404308</td>\n",
       "      <td>305.6750</td>\n",
       "      <td>290.945692</td>\n",
       "      <td>70.258528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2597</th>\n",
       "      <td>29.04.2024</td>\n",
       "      <td>10:00</td>\n",
       "      <td>319.75</td>\n",
       "      <td>326.00</td>\n",
       "      <td>319.50</td>\n",
       "      <td>325.50</td>\n",
       "      <td>5.377141</td>\n",
       "      <td>3.781666</td>\n",
       "      <td>323.479984</td>\n",
       "      <td>307.1750</td>\n",
       "      <td>290.870016</td>\n",
       "      <td>77.561507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2598</th>\n",
       "      <td>29.04.2024</td>\n",
       "      <td>14:00</td>\n",
       "      <td>325.50</td>\n",
       "      <td>325.75</td>\n",
       "      <td>323.50</td>\n",
       "      <td>325.75</td>\n",
       "      <td>5.961193</td>\n",
       "      <td>4.217571</td>\n",
       "      <td>325.937024</td>\n",
       "      <td>308.7000</td>\n",
       "      <td>291.462976</td>\n",
       "      <td>77.734677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2599</th>\n",
       "      <td>29.04.2024</td>\n",
       "      <td>18:00</td>\n",
       "      <td>325.50</td>\n",
       "      <td>326.00</td>\n",
       "      <td>325.50</td>\n",
       "      <td>326.00</td>\n",
       "      <td>6.370793</td>\n",
       "      <td>4.648216</td>\n",
       "      <td>328.161977</td>\n",
       "      <td>310.1000</td>\n",
       "      <td>292.038023</td>\n",
       "      <td>77.918203</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2600 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Date   Time    Open    High     Low   Close  MACD (26,12)     \\\n",
       "0     03.11.2020  14:00    9.41    9.67    9.34    9.51         0.000000   \n",
       "1     03.11.2020  18:00    9.52    9.52    9.52    9.52         0.000000   \n",
       "2     04.11.2020  10:00    9.52    9.78    9.47    9.63         0.000000   \n",
       "3     04.11.2020  14:00    9.63    9.92    9.62    9.79         0.000000   \n",
       "4     04.11.2020  18:00    9.78    9.78    9.78    9.78         0.000000   \n",
       "...          ...    ...     ...     ...     ...     ...              ...   \n",
       "2595  26.04.2024  14:00  317.00  319.00  315.25  316.50         4.358951   \n",
       "2596  26.04.2024  18:00  316.50  317.00  316.50  317.00         4.578920   \n",
       "2597  29.04.2024  10:00  319.75  326.00  319.50  325.50         5.377141   \n",
       "2598  29.04.2024  14:00  325.50  325.75  323.50  325.75         5.961193   \n",
       "2599  29.04.2024  18:00  325.50  326.00  325.50  326.00         6.370793   \n",
       "\n",
       "      TRIGGER (9)     BOL U (20,2)     BOL M (20,2)     BOL D (20,2)     \\\n",
       "0           0.000000         0.000000           0.0000         0.000000   \n",
       "1           0.000000         0.000000           0.0000         0.000000   \n",
       "2           0.000000         0.000000           0.0000         0.000000   \n",
       "3           0.000000         0.000000           0.0000         0.000000   \n",
       "4           0.000000         0.000000           0.0000         0.000000   \n",
       "...              ...              ...              ...              ...   \n",
       "2595        3.083766       318.773355         304.8625       290.951645   \n",
       "2596        3.382797       320.404308         305.6750       290.945692   \n",
       "2597        3.781666       323.479984         307.1750       290.870016   \n",
       "2598        4.217571       325.937024         308.7000       291.462976   \n",
       "2599        4.648216       328.161977         310.1000       292.038023   \n",
       "\n",
       "      RSI (14)     \n",
       "0        0.000000  \n",
       "1        0.000000  \n",
       "2        0.000000  \n",
       "3        0.000000  \n",
       "4        0.000000  \n",
       "...           ...  \n",
       "2595    69.720226  \n",
       "2596    70.258528  \n",
       "2597    77.561507  \n",
       "2598    77.734677  \n",
       "2599    77.918203  \n",
       "\n",
       "[2600 rows x 12 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_thyao_dortsaat = pd.read_excel('THYAO_240Dk.xlsx')\n",
    "data_thyao_dortsaat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>MACD (26,12)</th>\n",
       "      <th>TRIGGER (9)</th>\n",
       "      <th>BOL U (20,2)</th>\n",
       "      <th>BOL M (20,2)</th>\n",
       "      <th>BOL D (20,2)</th>\n",
       "      <th>RSI (14)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2600.000000</td>\n",
       "      <td>2600.000000</td>\n",
       "      <td>2600.000000</td>\n",
       "      <td>2600.000000</td>\n",
       "      <td>2600.000000</td>\n",
       "      <td>2600.000000</td>\n",
       "      <td>2600.000000</td>\n",
       "      <td>2600.000000</td>\n",
       "      <td>2600.000000</td>\n",
       "      <td>2600.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>102.803908</td>\n",
       "      <td>103.662319</td>\n",
       "      <td>101.999038</td>\n",
       "      <td>102.810277</td>\n",
       "      <td>0.794521</td>\n",
       "      <td>0.786872</td>\n",
       "      <td>106.700049</td>\n",
       "      <td>101.617612</td>\n",
       "      <td>96.535174</td>\n",
       "      <td>56.540129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>96.382831</td>\n",
       "      <td>97.109521</td>\n",
       "      <td>95.717331</td>\n",
       "      <td>96.367907</td>\n",
       "      <td>2.324463</td>\n",
       "      <td>2.198961</td>\n",
       "      <td>99.960911</td>\n",
       "      <td>95.670375</td>\n",
       "      <td>91.488921</td>\n",
       "      <td>16.247798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>9.410000</td>\n",
       "      <td>9.520000</td>\n",
       "      <td>9.340000</td>\n",
       "      <td>9.510000</td>\n",
       "      <td>-6.573430</td>\n",
       "      <td>-5.692022</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>14.405000</td>\n",
       "      <td>14.507500</td>\n",
       "      <td>14.310000</td>\n",
       "      <td>14.410000</td>\n",
       "      <td>-0.092408</td>\n",
       "      <td>-0.088976</td>\n",
       "      <td>14.781443</td>\n",
       "      <td>14.255000</td>\n",
       "      <td>13.724887</td>\n",
       "      <td>45.595645</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>52.800000</td>\n",
       "      <td>53.975000</td>\n",
       "      <td>52.575000</td>\n",
       "      <td>53.300000</td>\n",
       "      <td>0.252419</td>\n",
       "      <td>0.246893</td>\n",
       "      <td>53.762632</td>\n",
       "      <td>50.646000</td>\n",
       "      <td>48.502187</td>\n",
       "      <td>57.201870</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>178.150000</td>\n",
       "      <td>180.550000</td>\n",
       "      <td>177.025000</td>\n",
       "      <td>178.225000</td>\n",
       "      <td>1.448285</td>\n",
       "      <td>1.456436</td>\n",
       "      <td>187.550572</td>\n",
       "      <td>177.452500</td>\n",
       "      <td>160.746853</td>\n",
       "      <td>68.095074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>325.500000</td>\n",
       "      <td>326.000000</td>\n",
       "      <td>325.500000</td>\n",
       "      <td>326.000000</td>\n",
       "      <td>9.974408</td>\n",
       "      <td>9.165981</td>\n",
       "      <td>328.161977</td>\n",
       "      <td>310.100000</td>\n",
       "      <td>292.038023</td>\n",
       "      <td>93.215663</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Open         High          Low        Close  MACD (26,12)     \\\n",
       "count  2600.000000  2600.000000  2600.000000  2600.000000      2600.000000   \n",
       "mean    102.803908   103.662319   101.999038   102.810277         0.794521   \n",
       "std      96.382831    97.109521    95.717331    96.367907         2.324463   \n",
       "min       9.410000     9.520000     9.340000     9.510000        -6.573430   \n",
       "25%      14.405000    14.507500    14.310000    14.410000        -0.092408   \n",
       "50%      52.800000    53.975000    52.575000    53.300000         0.252419   \n",
       "75%     178.150000   180.550000   177.025000   178.225000         1.448285   \n",
       "max     325.500000   326.000000   325.500000   326.000000         9.974408   \n",
       "\n",
       "       TRIGGER (9)     BOL U (20,2)     BOL M (20,2)     BOL D (20,2)     \\\n",
       "count     2600.000000      2600.000000      2600.000000      2600.000000   \n",
       "mean         0.786872       106.700049       101.617612        96.535174   \n",
       "std          2.198961        99.960911        95.670375        91.488921   \n",
       "min         -5.692022         0.000000         0.000000         0.000000   \n",
       "25%         -0.088976        14.781443        14.255000        13.724887   \n",
       "50%          0.246893        53.762632        50.646000        48.502187   \n",
       "75%          1.456436       187.550572       177.452500       160.746853   \n",
       "max          9.165981       328.161977       310.100000       292.038023   \n",
       "\n",
       "       RSI (14)     \n",
       "count  2600.000000  \n",
       "mean     56.540129  \n",
       "std      16.247798  \n",
       "min       0.000000  \n",
       "25%      45.595645  \n",
       "50%      57.201870  \n",
       "75%      68.095074  \n",
       "max      93.215663  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_thyao_dortsaat.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2600 entries, 0 to 2599\n",
      "Data columns (total 12 columns):\n",
      " #   Column           Non-Null Count  Dtype  \n",
      "---  ------           --------------  -----  \n",
      " 0   Date             2600 non-null   object \n",
      " 1   Time             2600 non-null   object \n",
      " 2   Open             2600 non-null   float64\n",
      " 3   High             2600 non-null   float64\n",
      " 4   Low              2600 non-null   float64\n",
      " 5   Close            2600 non-null   float64\n",
      " 6   MACD (26,12)     2600 non-null   float64\n",
      " 7   TRIGGER (9)      2600 non-null   float64\n",
      " 8   BOL U (20,2)     2600 non-null   float64\n",
      " 9   BOL M (20,2)     2600 non-null   float64\n",
      " 10  BOL D (20,2)     2600 non-null   float64\n",
      " 11  RSI (14)         2600 non-null   float64\n",
      "dtypes: float64(10), object(2)\n",
      "memory usage: 243.9+ KB\n"
     ]
    }
   ],
   "source": [
    "data_thyao_dortsaat.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date               0\n",
       "Time               0\n",
       "Open               0\n",
       "High               0\n",
       "Low                0\n",
       "Close              0\n",
       "MACD (26,12)       0\n",
       "TRIGGER (9)        0\n",
       "BOL U (20,2)       0\n",
       "BOL M (20,2)       0\n",
       "BOL D (20,2)       0\n",
       "RSI (14)           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_thyao_dortsaat.isnull().sum().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (1357021252.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  Cell \u001b[0;32mIn[18], line 1\u001b[0;36m\u001b[0m\n\u001b[0;31m    ÅŸimdi bu veri setindeki bilgilerle ilgili birkaÃ§ gÃ¶rselleÅŸtirme yapalÄ±m\u001b[0m\n\u001b[0m          ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "\"ÅŸimdi bu veri setindeki bilgilerle ilgili birkaÃ§ gÃ¶rselleÅŸtirme yapalÄ±m k-means normalization uygulayÄ±p gÃ¶rselleÅŸtirelim\"\n",
    "\n",
    "data_thyao_dortsaat = data_thyao_dortsaat.dropna()\n",
    "data_thyao_dortsaat = data_thyao_dortsaat.drop_duplicates()\n",
    "\n",
    "data_thyao_dortsaat = data_thyao_dortsaat.drop(['Tarih'], axis=1)\n",
    "\n",
    "data_thyao_dortsaat\n",
    "\n",
    "scaler = StandardScaler()\n",
    "data_thyao_dortsaat_scaled = scaler.fit_transform(data_thyao_dortsaat)\n",
    "data_thyao_dortsaat_scaled = pd.DataFrame(data_thyao_dortsaat_scaled, columns=data_thyao_dortsaat.columns)\n",
    "\n",
    "data_thyao_dortsaat_scaled\n",
    "\n",
    "data_thyao_dortsaat_scaled.describe()\n",
    "\n",
    "data_thyao_dortsaat_scaled.boxplot(figsize=(12, 8), rot=45)\n",
    "plt.show()\n",
    "\n",
    "data_thyao_dortsaat_scaled.hist(figsize=(12, 8), bins=20)\n",
    "plt.show()\n",
    "\n",
    "data_thyao_dortsaat_scaled.plot(figsize=(12, 8))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
